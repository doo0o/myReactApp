<!-- FO-PL-MS0021 : 음성검색 - FULL -->
<div class="CPOpop_full2" id="FO-PL-MS0021">
	<div class="p_wrap search_layer">
		<div class="box_search_top">
			<h2 class="title">검색어를 <br/>말씀해주세요</h2>
			<div class="search_word">
				<span class="final_span"></span> <span class="interim_span" ></span>  
			</div>         
		</div>
		<div class="box_search_btm">
			<div class="recommend_word">
				<strong>이렇게 말해 보세요</strong>
				<p>“그랜저”</p>
				<p>“3천만원대”</p>
				<p>“신차급”</p>
			</div>

			<div class="box_loading" >
				<i></i>
				<i></i>
				<i></i>
				<i></i>
				<i></i>
			</div>
			<div class="box_restart_search">
				<p>다시 시도하려면 마이크를 탭하세요</p>
				<button type="button" class="btn_speech_restart"><img src="/GHQ/img/btn_voice_search.png" alt="음성검색" /></button>
			</div>
		</div>
	</div>
	<button type="button" class="pop_close">닫기</button>
</div>

<script>
function FilterSpeech(){// 음성인식 
	var listenEnd = false;//듣는중...텍스트 노출 여부
	var recognizing = false; //speech 시작여부
	var resultChk = false; //speech 결과값 유무
	var final_transcript = '';
	var start_timestamp;
	var loadingSet;
	// var getStream;
	var titles = document.querySelector('.search_layer .title');
	var loadings = document.querySelector('.search_layer .box_loading');
	var searchs = document.querySelector('.search_layer .box_search_btm');
	var btnSpeech = document.querySelector('.search_layer .btn_speech_restart');
	var final_span = document.querySelector('.search_layer .final_span');
	var interim_span = document.querySelector('.search_layer .interim_span');

	//api setting
	var recognition = new webkitSpeechRecognition();
	recognition.continuous = true;
	recognition.interimResults = true;
	recognition.lang = 'ko-KR';

	recognition.onstart = function() {
		recognizing = true;
		loadingMessage();
	};
	
	recognition.onerror = function(event) {
		console.log(event.error);
	};

	recognition.onend = function() {  
		if(!listenEnd) return; //듣는중.. 시작전 end시

		if(!final_transcript) { //speech 입력없이 종료된 경우
			unrecognizable(); 
		} 

		loadings.classList = 'box_loading' 
		// getStream.getTracks()[0].stop(); //audio end   
	};
	
	recognition.onresult = function(event) { 
		var interim_transcript = ''; 

		if (typeof(event.results) == 'undefined') { 
			recognition.onend = null;
			recognition.stop();
			return;
		}

		for (var i = event.resultIndex; i < event.results.length; ++i) {
			if (event.results[i].isFinal) {
				final_transcript += event.results[i][0].transcript;
			} else {
				interim_transcript += event.results[i][0].transcript;
			}
		}
		final_span.innerHTML = linebreak(final_transcript);
		interim_span.innerHTML = linebreak(interim_transcript);
		if (final_transcript) { 
			recognizing = false; 
			recognition.stop(); 
		}
		if(interim_transcript || final_transcript) { 
			clearTimeout(loadingSet)
			resultChk = true;
			titles.innerHTML = ''; 
			searchs.classList = 'box_search_btm'
		}
	};

	var two_line = /\n\n/g;
	var one_line = /\n/g;
	function linebreak(s) {
		return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
	}  
	
	function searchListen (){ 
		if(!final_transcript){ 
			titles.innerHTML = '듣는중...' ; 
			searchs.classList.add('active_recommend');   
			listenEnd = true; 
			forceQuit(); 
		}   
	}

	function loadingMessage() {
		if(!recognizing) return; //마이크 활성화 여부 
		loadingSet = setTimeout(searchListen, 2000); //시작 2초 후 듣는중 활성화
	}

	// 자동 end 처리 안될시 강제 종료.
	function forceQuit(){ 
		setTimeout(function(){ 
			if(recognizing && !final_transcript) { 
				unrecognizable(); 
			}

		}, 5000)
	}

	function unrecognizable(){
		if(resultChk || !listenEnd) return;
		titles.innerHTML = '죄송해요<br/>인식하지 못했어요';
		loadings.classList.remove('active');
		searchs.classList = 'box_search_btm active_restart';
		recognizing = false;  
		recognition.stop();
	}

	//audio api //https 환경에서 사용가능
	var constraints = { audio: true };

	function audioStart(){
		navigator.mediaDevices.getUserMedia(constraints)
		.then(function(stream) {
			audioContext = new (window.AudioContext || window.webkitAudioContext)();
			analyser = audioContext.createAnalyser();
			microphone = audioContext.createMediaStreamSource(stream);
			javascriptNode = audioContext.createScriptProcessor(2048, 1, 1);  
			analyser.smoothingTimeConstant = 0.8;
			analyser.fftSize = 1024;
			getStream = stream;
			microphone.connect(analyser);
			analyser.connect(javascriptNode);
			javascriptNode.connect(audioContext.destination);

			var recievedAudio = false;
			javascriptNode.onaudioprocess = function() {
				if (!recievedAudio) {
					recievedAudio = true;
				}

				var array = new Uint8Array(analyser.frequencyBinCount);
				analyser.getByteFrequencyData(array);
				var values = 0;
				var length = array.length;
				for (var i = 0; i < length; i++) {
					values += (array[i]);
				}

				var average = Math.round(values / length);
				words.innerHtml = average;

				if(average > 30) {
					loadings.classList.add('speed')
				} else {
					loadings.classList.remove('speed')
				}
			}
		})
		.catch(function(err) {
			console.log(err)
		});
	}

	function speechStart() {
		if (recognizing) {
			recognition.stop();
			return;
		}
		//초기화
		listenEnd = false;
		clearTimeout(searchListen);
		final_transcript = '';
		final_span.innerHTML = '';
		interim_span.innerHTML = '';
		loadings.classList.add('active');
		searchs.classList = 'box_search_btm';
		titles.innerHTML = '검색어를<br/>말씀해주세요';
		resultChk = false;
		recognition.start();
	}

	$(btnSpeech).on('click', function(){
		speechStart();
	})

	speechStart();
}

function FilterSpeechBtn(){// 음성인식 버튼 클릭 스크립트
	$(document).off("click",".ic_mic")
			.on("click",".ic_mic", function(){
				CPO.POPUP_open($(this));
				FilterSpeech();
		// $(".ipt_sch").attr("contenteditable","true");
		// FilterSpeech();
	});
}
</script>


